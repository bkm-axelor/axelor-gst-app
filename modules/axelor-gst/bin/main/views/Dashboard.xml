<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://axelor.com/xml/ns/object-views
  http://axelor.com/xml/ns/object-views/object-views_5.4.xsd">

		<chart name="chart-gst-result-bar" title="UnPaid Per Customer!!!" onInit="action.gst.chart.set.dates.this.day">
				<search-fields>
						<field type="date" name="fromDateTime" title="From Date" />
						<field type="date" name="toDateTime" title="To Date" />
				</search-fields>
				<dataset type="sql">		
select
	party."name" as customer,
	count(invoice.id) as invoices,
	invoice.invoice_date as fromDateTime,
	current_date as toDateTime
from
	gst_invoice as invoice
left join gst_party as party 
				on
	invoice.party = party.id
where
	invoice.status in ('Draft','Validated')
	and invoice.invoice_date between DATE(:fromDateTime) and DATE(:toDateTime)
group by
	(party.id,
	invoice.invoice_date)
		</dataset>
				<category key="customer" type="number" title="customer" />
				<series key="invoices" type="bar" title="invoices" />
		</chart>


		<chart name="chart-gst-paid-productresult-bar" title="Paid per Category" onInit="action.gst.chart.set.dates.this.day">
				<search-fields>
						<field type="date" name="fromDateTime" title="From Date" />
						<field type="date" name="toDateTime" title="To Date" />
				</search-fields>
				<dataset type="sql">
					select
						count(gp.category) as count_category,
						gpc.name as category_name
					from
						gst_product gp
					left join gst_product_category as gpc on
						gpc.id = gp.category left join
						gst_invoice_line as invoiceline on 
						invoiceline.product = gp.id left join 
						gst_invoice as invoice on
						invoice.id = invoiceline.invoice 
						where invoice.status = 'Paid'
					group by
						gpc.name
		</dataset>
				<category key="category_name" type="text" title="Product Name" />
				<series key="count_category" type="bar" title="Product" />
		</chart>


		<chart name="chart-gst-customer-state-pie" title="Customer per state">
				<dataset type="sql">
					select
						count(parties ."name") as customer ,
						states ."name" as statename 
					from
						gst_party as parties 
					left join gst_address as addr on
						addr.party = parties .id left join gst_state as states on addr.state = states .id 
						group by states ."name"
		</dataset>
				<category key="statename" type="text" title="State Name" />
				<series key="customer" type="pie" groupBy="statename" title="Customer" />
		</chart>

		<chart name="chart-gst-invoice-status-line" title="Invoice per Status">

				<dataset type="sql">
					select
						count(invoice.id) as totalinvoices ,
						invoice.status as allstatus
					from
						gst_invoice as invoice
					group by
						invoice.status																
		</dataset>
				<category key="allstatus" type="number" title="Status" />
				<series key="totalinvoices" type="line" title="Invoice" />
		</chart>



		<chart name="chart-gst-invoice-status-bar" title="Invoice per Status">

				<dataset type="sql">
					select
						count(invoice.id) as totalinvoices,
						invoice.status as allstatus
					from
						gst_invoice as invoice
					group by
						invoice.status																
		</dataset>
				<category key="allstatus" type="number" title="Status" />
				<series key="totalinvoices" type="bar" title="Invoice" />
		</chart>


		<action-record model="com.axelor.gst.db.Invoice" name="action.gst.chart.set.dates.this.day">
				<field name="toDateTime" expr="eval:__date__" />
				<field name="fromDateTime" expr="eval:__date__.withDayOfMonth(1)" />
		</action-record>

		<!-- select party."name" as customer, count(invoice.id) as invoices, invoice.invoice_date as fromDateTime, current_date as toDateTime from gst_invoice as invoice left join gst_party as party 
				on invoice.party = party.id where invoice.status = 'Draft' or invoice.status = 'Validated' AND invoice.invoice_date BETWEEN DATE(:fromDateTime) AND DATE(:toDateTime) group by (party.id, invoice.invoice_date) -->

		<!-- <chart name="chart-gst-result-bar" title="DashBoard!!!"> <search-fields> <field type="datetime" name="fromDateTime" title="From Date" /> <field type="datetime" name="toDateTime" title="To 
				Date" /> </search-fields> <dataset type="sql"> <![CDATA[ select party."name" as customer, count(invoice.id) as invoices, invoice.invoice_date as fromDateTime, current_date as toDateTime from 
				gst_invoice as invoice left join gst_party as party on invoice.party = party.id where invoice.status = 'Draft' or invoice.status = 'Validated' group by (party.id, invoice.invoice_date); ]]> </dataset> 
				<category key="customer" type="number" title="Coustomer" /> <series key="invoices" type="bar" title="UnPaid Invoices" /> </chart> -->
		<!-- onInit="action.gst.chart.set.dates.this.day" -->

		<!-- select count(gp.category) as count_category, gpc.name as category_name from gst_product gp left join gst_product_category as gpc on gpc.id = gp.category left join gst_invoice_line as invoiceline 
				on invoiceline.product = gp.id left join gst_invoice as invoice on invoice.id = invoiceline.invoice where invoice.status = 'Paid' group by gpc.name -->

		<!-- select parties .id as customer, count(invoice .id) as invoices, current_date as todaydate, invoice.invoice_date as fromdate from gst_invoice as invoice left join gst_party as parties on 
				invoice.party = parties.id where invoice.status != 'VAlidated' and invoice.status != 'Cancled' and self.orderDate > :fromDateTime and self.orderDate < :toDateTime group by (parties.id, invoice.invoice_date); -->

</object-views>